# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

from timer import Timer
from math import sqrt

def pent(n):
    return int((n * ((3 * n) - 1)) / 2)

def is_pent(n):
    return ((1 + sqrt(1 + 24 * n)) / 6) % 1 == 0

def sum_and_diff_pent(a, b):
    return is_pent(abs(a - b)) and is_pent(a + b)

def find_answer():
    pentagonals = [pent(n) for n in range(1,10**4)]

    d = 0
    for index_1 in range(len(pentagonals)):
        for index_2 in range(index_1, len(pentagonals)):
            diff = abs(pentagonals[index_1] - pentagonals[index_2])
            if sum_and_diff_pent(pentagonals[index_1], pentagonals[index_2]) and (diff < d or d == 0):
                d = diff
    return d

    
    


t = Timer()
t.time(find_answer)
